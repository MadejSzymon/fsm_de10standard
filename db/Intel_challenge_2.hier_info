|top
board_clk => board_clk.IN1
input_0 => input_0.IN1
input_1 => input_1.IN1
input_panic => input_panic.IN1
output_LED_0[0] << output_control:output_control_u.output_LED_0
output_LED_0[1] << output_control:output_control_u.output_LED_0
output_LED_0[2] << output_control:output_control_u.output_LED_0
output_LED_0[3] << output_control:output_control_u.output_LED_0
output_LED_1[0] << output_control:output_control_u.output_LED_1
output_LED_1[1] << output_control:output_control_u.output_LED_1
output_LED_1[2] << output_control:output_control_u.output_LED_1
output_LED_1[3] << output_control:output_control_u.output_LED_1
unused_LED << <GND>
panic_LED << output_control:output_control_u.panic_LED
seg_0[0] << output_control:output_control_u.seg_0
seg_0[1] << output_control:output_control_u.seg_0
seg_0[2] << output_control:output_control_u.seg_0
seg_0[3] << output_control:output_control_u.seg_0
seg_0[4] << output_control:output_control_u.seg_0
seg_0[5] << output_control:output_control_u.seg_0
seg_0[6] << output_control:output_control_u.seg_0
seg_1[0] << output_control:output_control_u.seg_1
seg_1[1] << output_control:output_control_u.seg_1
seg_1[2] << output_control:output_control_u.seg_1
seg_1[3] << output_control:output_control_u.seg_1
seg_1[4] << output_control:output_control_u.seg_1
seg_1[5] << output_control:output_control_u.seg_1
seg_1[6] << output_control:output_control_u.seg_1
seg_2[0] << output_control:output_control_u.seg_2
seg_2[1] << output_control:output_control_u.seg_2
seg_2[2] << output_control:output_control_u.seg_2
seg_2[3] << output_control:output_control_u.seg_2
seg_2[4] << output_control:output_control_u.seg_2
seg_2[5] << output_control:output_control_u.seg_2
seg_2[6] << output_control:output_control_u.seg_2
seg_3[0] << output_control:output_control_u.seg_3
seg_3[1] << output_control:output_control_u.seg_3
seg_3[2] << output_control:output_control_u.seg_3
seg_3[3] << output_control:output_control_u.seg_3
seg_3[4] << output_control:output_control_u.seg_3
seg_3[5] << output_control:output_control_u.seg_3
seg_3[6] << output_control:output_control_u.seg_3
seg_4[0] << output_control:output_control_u.seg_4
seg_4[1] << output_control:output_control_u.seg_4
seg_4[2] << output_control:output_control_u.seg_4
seg_4[3] << output_control:output_control_u.seg_4
seg_4[4] << output_control:output_control_u.seg_4
seg_4[5] << output_control:output_control_u.seg_4
seg_4[6] << output_control:output_control_u.seg_4


|top|pll_0002:pll_inst
refclk => refclk.IN1
rst => rst.IN1
outclk_0 <= altera_pll:altera_pll_i.outclk
locked <= altera_pll:altera_pll_i.locked


|top|pll_0002:pll_inst|altera_pll:altera_pll_i
refclk => general[0].gpll.I_REFCLK
refclk1 => ~NO_FANOUT~
fbclk => ~NO_FANOUT~
rst => general[0].gpll.I_RST
phase_en => ~NO_FANOUT~
updn => ~NO_FANOUT~
num_phase_shifts[0] => ~NO_FANOUT~
num_phase_shifts[1] => ~NO_FANOUT~
num_phase_shifts[2] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
cntsel[0] => ~NO_FANOUT~
cntsel[1] => ~NO_FANOUT~
cntsel[2] => ~NO_FANOUT~
cntsel[3] => ~NO_FANOUT~
cntsel[4] => ~NO_FANOUT~
reconfig_to_pll[0] => ~NO_FANOUT~
reconfig_to_pll[1] => ~NO_FANOUT~
reconfig_to_pll[2] => ~NO_FANOUT~
reconfig_to_pll[3] => ~NO_FANOUT~
reconfig_to_pll[4] => ~NO_FANOUT~
reconfig_to_pll[5] => ~NO_FANOUT~
reconfig_to_pll[6] => ~NO_FANOUT~
reconfig_to_pll[7] => ~NO_FANOUT~
reconfig_to_pll[8] => ~NO_FANOUT~
reconfig_to_pll[9] => ~NO_FANOUT~
reconfig_to_pll[10] => ~NO_FANOUT~
reconfig_to_pll[11] => ~NO_FANOUT~
reconfig_to_pll[12] => ~NO_FANOUT~
reconfig_to_pll[13] => ~NO_FANOUT~
reconfig_to_pll[14] => ~NO_FANOUT~
reconfig_to_pll[15] => ~NO_FANOUT~
reconfig_to_pll[16] => ~NO_FANOUT~
reconfig_to_pll[17] => ~NO_FANOUT~
reconfig_to_pll[18] => ~NO_FANOUT~
reconfig_to_pll[19] => ~NO_FANOUT~
reconfig_to_pll[20] => ~NO_FANOUT~
reconfig_to_pll[21] => ~NO_FANOUT~
reconfig_to_pll[22] => ~NO_FANOUT~
reconfig_to_pll[23] => ~NO_FANOUT~
reconfig_to_pll[24] => ~NO_FANOUT~
reconfig_to_pll[25] => ~NO_FANOUT~
reconfig_to_pll[26] => ~NO_FANOUT~
reconfig_to_pll[27] => ~NO_FANOUT~
reconfig_to_pll[28] => ~NO_FANOUT~
reconfig_to_pll[29] => ~NO_FANOUT~
reconfig_to_pll[30] => ~NO_FANOUT~
reconfig_to_pll[31] => ~NO_FANOUT~
reconfig_to_pll[32] => ~NO_FANOUT~
reconfig_to_pll[33] => ~NO_FANOUT~
reconfig_to_pll[34] => ~NO_FANOUT~
reconfig_to_pll[35] => ~NO_FANOUT~
reconfig_to_pll[36] => ~NO_FANOUT~
reconfig_to_pll[37] => ~NO_FANOUT~
reconfig_to_pll[38] => ~NO_FANOUT~
reconfig_to_pll[39] => ~NO_FANOUT~
reconfig_to_pll[40] => ~NO_FANOUT~
reconfig_to_pll[41] => ~NO_FANOUT~
reconfig_to_pll[42] => ~NO_FANOUT~
reconfig_to_pll[43] => ~NO_FANOUT~
reconfig_to_pll[44] => ~NO_FANOUT~
reconfig_to_pll[45] => ~NO_FANOUT~
reconfig_to_pll[46] => ~NO_FANOUT~
reconfig_to_pll[47] => ~NO_FANOUT~
reconfig_to_pll[48] => ~NO_FANOUT~
reconfig_to_pll[49] => ~NO_FANOUT~
reconfig_to_pll[50] => ~NO_FANOUT~
reconfig_to_pll[51] => ~NO_FANOUT~
reconfig_to_pll[52] => ~NO_FANOUT~
reconfig_to_pll[53] => ~NO_FANOUT~
reconfig_to_pll[54] => ~NO_FANOUT~
reconfig_to_pll[55] => ~NO_FANOUT~
reconfig_to_pll[56] => ~NO_FANOUT~
reconfig_to_pll[57] => ~NO_FANOUT~
reconfig_to_pll[58] => ~NO_FANOUT~
reconfig_to_pll[59] => ~NO_FANOUT~
reconfig_to_pll[60] => ~NO_FANOUT~
reconfig_to_pll[61] => ~NO_FANOUT~
reconfig_to_pll[62] => ~NO_FANOUT~
reconfig_to_pll[63] => ~NO_FANOUT~
extswitch => ~NO_FANOUT~
adjpllin => ~NO_FANOUT~
cclk => ~NO_FANOUT~
outclk[0] <= general[0].gpll.O_OUTCLK
fboutclk <= general[0].gpll.O_FBOUTCLK
locked <= general[0].gpll.LOCKED
phase_done <= <GND>
reconfig_from_pll[0] <= <GND>
reconfig_from_pll[1] <= <GND>
reconfig_from_pll[2] <= <GND>
reconfig_from_pll[3] <= <GND>
reconfig_from_pll[4] <= <GND>
reconfig_from_pll[5] <= <GND>
reconfig_from_pll[6] <= <GND>
reconfig_from_pll[7] <= <GND>
reconfig_from_pll[8] <= <GND>
reconfig_from_pll[9] <= <GND>
reconfig_from_pll[10] <= <GND>
reconfig_from_pll[11] <= <GND>
reconfig_from_pll[12] <= <GND>
reconfig_from_pll[13] <= <GND>
reconfig_from_pll[14] <= <GND>
reconfig_from_pll[15] <= <GND>
reconfig_from_pll[16] <= <GND>
reconfig_from_pll[17] <= <GND>
reconfig_from_pll[18] <= <GND>
reconfig_from_pll[19] <= <GND>
reconfig_from_pll[20] <= <GND>
reconfig_from_pll[21] <= <GND>
reconfig_from_pll[22] <= <GND>
reconfig_from_pll[23] <= <GND>
reconfig_from_pll[24] <= <GND>
reconfig_from_pll[25] <= <GND>
reconfig_from_pll[26] <= <GND>
reconfig_from_pll[27] <= <GND>
reconfig_from_pll[28] <= <GND>
reconfig_from_pll[29] <= <GND>
reconfig_from_pll[30] <= <GND>
reconfig_from_pll[31] <= <GND>
reconfig_from_pll[32] <= <GND>
reconfig_from_pll[33] <= <GND>
reconfig_from_pll[34] <= <GND>
reconfig_from_pll[35] <= <GND>
reconfig_from_pll[36] <= <GND>
reconfig_from_pll[37] <= <GND>
reconfig_from_pll[38] <= <GND>
reconfig_from_pll[39] <= <GND>
reconfig_from_pll[40] <= <GND>
reconfig_from_pll[41] <= <GND>
reconfig_from_pll[42] <= <GND>
reconfig_from_pll[43] <= <GND>
reconfig_from_pll[44] <= <GND>
reconfig_from_pll[45] <= <GND>
reconfig_from_pll[46] <= <GND>
reconfig_from_pll[47] <= <GND>
reconfig_from_pll[48] <= <GND>
reconfig_from_pll[49] <= <GND>
reconfig_from_pll[50] <= <GND>
reconfig_from_pll[51] <= <GND>
reconfig_from_pll[52] <= <GND>
reconfig_from_pll[53] <= <GND>
reconfig_from_pll[54] <= <GND>
reconfig_from_pll[55] <= <GND>
reconfig_from_pll[56] <= <GND>
reconfig_from_pll[57] <= <GND>
reconfig_from_pll[58] <= <GND>
reconfig_from_pll[59] <= <GND>
reconfig_from_pll[60] <= <GND>
reconfig_from_pll[61] <= <GND>
reconfig_from_pll[62] <= <GND>
reconfig_from_pll[63] <= <GND>
activeclk <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
phout[0] <= <GND>
phout[1] <= <GND>
phout[2] <= <GND>
phout[3] <= <GND>
phout[4] <= <GND>
phout[5] <= <GND>
phout[6] <= <GND>
phout[7] <= <GND>
lvds_clk[0] <= <GND>
lvds_clk[1] <= <GND>
loaden[0] <= <GND>
loaden[1] <= <GND>
extclk_out[0] <= <GND>
extclk_out[1] <= <GND>
cascade_out[0] <= <GND>
zdbfbclk <> <GND>


|top|edge_detector:edge_detector_0
clk => state_reg.CLK
level => state_next.OUTPUTSELECT
level => tick.DATAA
level => state_next.OUTPUTSELECT
tick <= tick.DB_MAX_OUTPUT_PORT_TYPE


|top|edge_detector:edge_detector_1
clk => state_reg.CLK
level => state_next.OUTPUTSELECT
level => tick.DATAA
level => state_next.OUTPUTSELECT
tick <= tick.DB_MAX_OUTPUT_PORT_TYPE


|top|edge_detector:edge_detector_panic
clk => state_reg.CLK
level => state_next.OUTPUTSELECT
level => tick.DATAA
level => state_next.OUTPUTSELECT
tick <= tick.DB_MAX_OUTPUT_PORT_TYPE


|top|btn_detector:btn_detector_u
clk => btn~reg0.CLK
tick_0 => always0.IN1
tick_1 => always0.IN1
state_reg[0] => Equal0.IN31
state_reg[1] => Equal0.IN30
state_reg[2] => Equal0.IN29
btn <= btn~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|timer:timer_u
clk => sec_t[0]~reg0.CLK
clk => sec_t[1]~reg0.CLK
clk => sec_t[2]~reg0.CLK
clk => t[0]~reg0.CLK
clk => t[1]~reg0.CLK
clk => t[2]~reg0.CLK
clk => t[3]~reg0.CLK
clk => t[4]~reg0.CLK
clk => t[5]~reg0.CLK
clk => t[6]~reg0.CLK
clk => t[7]~reg0.CLK
clk => t[8]~reg0.CLK
clk => t[9]~reg0.CLK
clk => t[10]~reg0.CLK
clk => t[11]~reg0.CLK
clk => t[12]~reg0.CLK
clk => t[13]~reg0.CLK
clk => t[14]~reg0.CLK
clk => t[15]~reg0.CLK
clk => t[16]~reg0.CLK
clk => t[17]~reg0.CLK
clk => t[18]~reg0.CLK
clk => t[19]~reg0.CLK
clk => t[20]~reg0.CLK
clk => t[21]~reg0.CLK
clk => t[22]~reg0.CLK
state_next[0] => Equal0.IN2
state_next[1] => Equal0.IN1
state_next[2] => Equal0.IN0
state_reg[0] => Equal0.IN5
state_reg[0] => Equal2.IN31
state_reg[1] => Equal0.IN4
state_reg[1] => Equal2.IN30
state_reg[2] => Equal0.IN3
state_reg[2] => Equal2.IN29
sec_t[0] <= sec_t[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
sec_t[1] <= sec_t[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
sec_t[2] <= sec_t[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
t[0] <= t[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
t[1] <= t[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
t[2] <= t[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
t[3] <= t[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
t[4] <= t[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
t[5] <= t[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
t[6] <= t[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
t[7] <= t[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
t[8] <= t[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
t[9] <= t[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
t[10] <= t[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
t[11] <= t[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
t[12] <= t[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
t[13] <= t[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
t[14] <= t[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
t[15] <= t[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
t[16] <= t[16]~reg0.DB_MAX_OUTPUT_PORT_TYPE
t[17] <= t[17]~reg0.DB_MAX_OUTPUT_PORT_TYPE
t[18] <= t[18]~reg0.DB_MAX_OUTPUT_PORT_TYPE
t[19] <= t[19]~reg0.DB_MAX_OUTPUT_PORT_TYPE
t[20] <= t[20]~reg0.DB_MAX_OUTPUT_PORT_TYPE
t[21] <= t[21]~reg0.DB_MAX_OUTPUT_PORT_TYPE
t[22] <= t[22]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|state_change:state_change_u
clk => state_reg[0]~reg0.CLK
clk => state_reg[1]~reg0.CLK
clk => state_reg[2]~reg0.CLK
state_next[0] => state_reg[0]~reg0.DATAIN
state_next[1] => state_reg[1]~reg0.DATAIN
state_next[2] => state_reg[2]~reg0.DATAIN
state_reg[0] <= state_reg[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
state_reg[1] <= state_reg[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
state_reg[2] <= state_reg[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|top|FSM:FSM_u
clk => ~NO_FANOUT~
tick_0 => always0.IN0
tick_1 => always0.IN1
tick_panic => state_next.DATAA
tick_panic => state_next.DATAA
tick_panic => state_next.DATAA
tick_panic => state_next.DATAA
tick_panic => state_next.DATAA
state_reg[0] => Mux0.IN10
state_reg[0] => Mux1.IN10
state_reg[0] => Mux2.IN6
state_reg[0] => Mux2.IN7
state_reg[0] => Mux2.IN8
state_reg[0] => Mux2.IN9
state_reg[0] => Mux2.IN10
state_reg[1] => Mux0.IN9
state_reg[1] => Mux1.IN5
state_reg[1] => Mux1.IN6
state_reg[1] => Mux1.IN7
state_reg[1] => Mux1.IN8
state_reg[1] => Mux1.IN9
state_reg[1] => Mux2.IN5
state_reg[2] => Mux0.IN4
state_reg[2] => Mux0.IN5
state_reg[2] => Mux0.IN6
state_reg[2] => Mux0.IN7
state_reg[2] => Mux0.IN8
state_reg[2] => Mux1.IN4
state_reg[2] => Mux2.IN4
state_next[0] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
state_next[1] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
state_next[2] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
sec_t[0] => LessThan0.IN6
sec_t[0] => LessThan1.IN6
sec_t[1] => LessThan0.IN5
sec_t[1] => LessThan1.IN5
sec_t[2] => LessThan0.IN4
sec_t[2] => LessThan1.IN4


|top|output_control:output_control_u
clk => panic_LED~reg0.CLK
clk => output_LED_1[0]~reg0.CLK
clk => output_LED_1[1]~reg0.CLK
clk => output_LED_1[2]~reg0.CLK
clk => output_LED_1[3]~reg0.CLK
clk => output_LED_1[4]~reg0.CLK
clk => output_LED_1[5]~reg0.CLK
clk => output_LED_1[6]~reg0.CLK
clk => output_LED_0[0]~reg0.CLK
clk => output_LED_0[1]~reg0.CLK
clk => output_LED_0[2]~reg0.CLK
clk => output_LED_0[3]~reg0.CLK
clk => output_LED_0[4]~reg0.CLK
clk => output_LED_0[5]~reg0.CLK
clk => output_LED_0[6]~reg0.CLK
clk => seg_4[0]~reg0.CLK
clk => seg_4[1]~reg0.CLK
clk => seg_4[2]~reg0.CLK
clk => seg_4[3]~reg0.CLK
clk => seg_4[4]~reg0.CLK
clk => seg_4[5]~reg0.CLK
clk => seg_4[6]~reg0.CLK
clk => seg_4[7]~reg0.CLK
clk => seg_3[0]~reg0.CLK
clk => seg_3[1]~reg0.CLK
clk => seg_3[2]~reg0.CLK
clk => seg_3[3]~reg0.CLK
clk => seg_3[4]~reg0.CLK
clk => seg_3[5]~reg0.CLK
clk => seg_3[6]~reg0.CLK
clk => seg_3[7]~reg0.CLK
clk => seg_2[0]~reg0.CLK
clk => seg_2[1]~reg0.CLK
clk => seg_2[2]~reg0.CLK
clk => seg_2[3]~reg0.CLK
clk => seg_2[4]~reg0.CLK
clk => seg_2[5]~reg0.CLK
clk => seg_2[6]~reg0.CLK
clk => seg_2[7]~reg0.CLK
clk => seg_1[0]~reg0.CLK
clk => seg_1[1]~reg0.CLK
clk => seg_1[2]~reg0.CLK
clk => seg_1[3]~reg0.CLK
clk => seg_1[4]~reg0.CLK
clk => seg_1[5]~reg0.CLK
clk => seg_1[6]~reg0.CLK
clk => seg_1[7]~reg0.CLK
clk => seg_0[0]~reg0.CLK
clk => seg_0[1]~reg0.CLK
clk => seg_0[2]~reg0.CLK
clk => seg_0[3]~reg0.CLK
clk => seg_0[4]~reg0.CLK
clk => seg_0[5]~reg0.CLK
clk => seg_0[6]~reg0.CLK
clk => seg_0[7]~reg0.CLK
output_LED_0[0] <= output_LED_0[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output_LED_0[1] <= output_LED_0[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output_LED_0[2] <= output_LED_0[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output_LED_0[3] <= output_LED_0[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output_LED_0[4] <= output_LED_0[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output_LED_0[5] <= output_LED_0[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output_LED_0[6] <= output_LED_0[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output_LED_1[0] <= output_LED_1[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output_LED_1[1] <= output_LED_1[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output_LED_1[2] <= output_LED_1[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output_LED_1[3] <= output_LED_1[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output_LED_1[4] <= output_LED_1[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output_LED_1[5] <= output_LED_1[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output_LED_1[6] <= output_LED_1[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
panic_LED <= panic_LED~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_0[0] <= seg_0[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_0[1] <= seg_0[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_0[2] <= seg_0[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_0[3] <= seg_0[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_0[4] <= seg_0[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_0[5] <= seg_0[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_0[6] <= seg_0[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_0[7] <= seg_0[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_1[0] <= seg_1[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_1[1] <= seg_1[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_1[2] <= seg_1[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_1[3] <= seg_1[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_1[4] <= seg_1[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_1[5] <= seg_1[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_1[6] <= seg_1[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_1[7] <= seg_1[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_2[0] <= seg_2[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_2[1] <= seg_2[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_2[2] <= seg_2[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_2[3] <= seg_2[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_2[4] <= seg_2[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_2[5] <= seg_2[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_2[6] <= seg_2[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_2[7] <= seg_2[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_3[0] <= seg_3[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_3[1] <= seg_3[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_3[2] <= seg_3[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_3[3] <= seg_3[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_3[4] <= seg_3[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_3[5] <= seg_3[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_3[6] <= seg_3[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_3[7] <= seg_3[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_4[0] <= seg_4[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_4[1] <= seg_4[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_4[2] <= seg_4[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_4[3] <= seg_4[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_4[4] <= seg_4[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_4[5] <= seg_4[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_4[6] <= seg_4[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
seg_4[7] <= seg_4[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
state_reg[0] => Decoder0.IN2
state_reg[0] => Decoder1.IN1
state_reg[0] => Decoder2.IN1
state_reg[0] => Mux0.IN7
state_reg[0] => Mux1.IN7
state_reg[0] => Mux2.IN7
state_reg[0] => Mux3.IN7
state_reg[0] => Mux4.IN7
state_reg[0] => Mux5.IN7
state_reg[0] => Mux6.IN7
state_reg[0] => Mux7.IN7
state_reg[0] => Mux8.IN7
state_reg[0] => Mux9.IN7
state_reg[0] => Mux10.IN7
state_reg[0] => Mux11.IN7
state_reg[0] => Mux12.IN7
state_reg[0] => Mux13.IN7
state_reg[0] => Mux14.IN4
state_reg[1] => Decoder0.IN1
state_reg[1] => Decoder1.IN0
state_reg[1] => Decoder3.IN1
state_reg[1] => Mux0.IN6
state_reg[1] => Mux1.IN6
state_reg[1] => Mux2.IN6
state_reg[1] => Mux3.IN6
state_reg[1] => Mux4.IN6
state_reg[1] => Mux5.IN6
state_reg[1] => Mux6.IN6
state_reg[1] => Mux7.IN6
state_reg[1] => Mux8.IN6
state_reg[1] => Mux9.IN6
state_reg[1] => Mux10.IN6
state_reg[1] => Mux11.IN6
state_reg[1] => Mux12.IN6
state_reg[1] => Mux13.IN6
state_reg[1] => Mux14.IN3
state_reg[2] => Decoder0.IN0
state_reg[2] => Decoder2.IN0
state_reg[2] => Decoder3.IN0
state_reg[2] => Mux0.IN5
state_reg[2] => Mux1.IN5
state_reg[2] => Mux2.IN5
state_reg[2] => Mux3.IN5
state_reg[2] => Mux4.IN5
state_reg[2] => Mux5.IN5
state_reg[2] => Mux6.IN5
state_reg[2] => Mux7.IN5
state_reg[2] => Mux8.IN5
state_reg[2] => Mux9.IN5
state_reg[2] => Mux10.IN5
state_reg[2] => Mux11.IN5
state_reg[2] => Mux12.IN5
state_reg[2] => Mux13.IN5
state_reg[2] => Mux14.IN2
state_reg[2] => seg_0[6]~reg0.DATAIN
t[0] => Equal0.IN20
t[0] => Equal1.IN22
t[0] => Equal2.IN21
t[0] => Equal3.IN20
t[1] => Equal0.IN19
t[1] => Equal1.IN21
t[1] => Equal2.IN20
t[1] => Equal3.IN31
t[2] => Equal0.IN18
t[2] => Equal1.IN20
t[2] => Equal2.IN19
t[2] => Equal3.IN19
t[3] => Equal0.IN17
t[3] => Equal1.IN19
t[3] => Equal2.IN18
t[3] => Equal3.IN18
t[4] => Equal0.IN16
t[4] => Equal1.IN18
t[4] => Equal2.IN17
t[4] => Equal3.IN17
t[5] => Equal0.IN15
t[5] => Equal1.IN17
t[5] => Equal2.IN16
t[5] => Equal3.IN16
t[6] => Equal0.IN14
t[6] => Equal1.IN16
t[6] => Equal2.IN15
t[6] => Equal3.IN15
t[7] => Equal0.IN13
t[7] => Equal1.IN15
t[7] => Equal2.IN14
t[7] => Equal3.IN14
t[8] => Equal0.IN12
t[8] => Equal1.IN14
t[8] => Equal2.IN13
t[8] => Equal3.IN13
t[9] => Equal0.IN11
t[9] => Equal1.IN13
t[9] => Equal2.IN12
t[9] => Equal3.IN12
t[10] => Equal0.IN10
t[10] => Equal1.IN12
t[10] => Equal2.IN11
t[10] => Equal3.IN11
t[11] => Equal0.IN9
t[11] => Equal1.IN11
t[11] => Equal2.IN10
t[11] => Equal3.IN10
t[12] => Equal0.IN8
t[12] => Equal1.IN10
t[12] => Equal2.IN9
t[12] => Equal3.IN9
t[13] => Equal0.IN7
t[13] => Equal1.IN9
t[13] => Equal2.IN8
t[13] => Equal3.IN8
t[14] => Equal0.IN6
t[14] => Equal1.IN8
t[14] => Equal2.IN7
t[14] => Equal3.IN7
t[15] => Equal0.IN5
t[15] => Equal1.IN7
t[15] => Equal2.IN6
t[15] => Equal3.IN6
t[16] => Equal0.IN4
t[16] => Equal1.IN6
t[16] => Equal2.IN5
t[16] => Equal3.IN5
t[17] => Equal0.IN3
t[17] => Equal1.IN5
t[17] => Equal2.IN4
t[17] => Equal3.IN4
t[18] => Equal0.IN2
t[18] => Equal1.IN4
t[18] => Equal2.IN3
t[18] => Equal3.IN3
t[19] => Equal0.IN1
t[19] => Equal1.IN3
t[19] => Equal2.IN2
t[19] => Equal3.IN2
t[20] => Equal0.IN0
t[20] => Equal1.IN2
t[20] => Equal2.IN1
t[20] => Equal3.IN1
t[21] => Equal0.IN22
t[21] => Equal1.IN1
t[21] => Equal2.IN0
t[21] => Equal3.IN30
t[22] => Equal0.IN21
t[22] => Equal1.IN0
t[22] => Equal2.IN22
t[22] => Equal3.IN0
sec_t[0] => ~NO_FANOUT~
sec_t[1] => ~NO_FANOUT~
sec_t[2] => ~NO_FANOUT~
btn => output_LED_1.OUTPUTSELECT
btn => output_LED_1.OUTPUTSELECT
btn => output_LED_1.OUTPUTSELECT
btn => output_LED_1.OUTPUTSELECT
btn => output_LED_1.OUTPUTSELECT
btn => output_LED_1.OUTPUTSELECT
btn => output_LED_1.OUTPUTSELECT
btn => output_LED_1.OUTPUTSELECT
btn => output_LED_1.OUTPUTSELECT
btn => output_LED_1.OUTPUTSELECT
btn => output_LED_1.OUTPUTSELECT
btn => output_LED_1.OUTPUTSELECT
btn => output_LED_1.OUTPUTSELECT
btn => output_LED_1.OUTPUTSELECT
btn => output_LED_1.OUTPUTSELECT
btn => output_LED_1.OUTPUTSELECT
btn => output_LED_1.OUTPUTSELECT
btn => output_LED_1.OUTPUTSELECT
btn => output_LED_1.OUTPUTSELECT
btn => output_LED_1.OUTPUTSELECT
btn => output_LED_0.OUTPUTSELECT
btn => output_LED_0.OUTPUTSELECT
btn => output_LED_0.OUTPUTSELECT
btn => output_LED_0.OUTPUTSELECT
btn => output_LED_0.OUTPUTSELECT
btn => output_LED_0.OUTPUTSELECT
btn => output_LED_0.OUTPUTSELECT
btn => output_LED_1.OUTPUTSELECT
btn => output_LED_1.OUTPUTSELECT
btn => output_LED_1.OUTPUTSELECT
btn => output_LED_1.OUTPUTSELECT
btn => output_LED_1.OUTPUTSELECT
btn => output_LED_1.OUTPUTSELECT
btn => output_LED_1.OUTPUTSELECT
btn => output_LED_0.OUTPUTSELECT
btn => output_LED_0.OUTPUTSELECT
btn => output_LED_0.OUTPUTSELECT
btn => output_LED_0.OUTPUTSELECT
btn => output_LED_0.OUTPUTSELECT
btn => output_LED_0.OUTPUTSELECT
btn => output_LED_0.OUTPUTSELECT
btn => output_LED_1.OUTPUTSELECT
btn => output_LED_1.OUTPUTSELECT
btn => output_LED_1.OUTPUTSELECT
btn => output_LED_1.OUTPUTSELECT
btn => output_LED_1.OUTPUTSELECT
btn => output_LED_1.OUTPUTSELECT
btn => output_LED_1.OUTPUTSELECT
btn => output_LED_0.OUTPUTSELECT
btn => output_LED_0.OUTPUTSELECT
btn => output_LED_0.OUTPUTSELECT
btn => output_LED_0.OUTPUTSELECT
btn => output_LED_0.OUTPUTSELECT
btn => output_LED_0.OUTPUTSELECT
btn => output_LED_1.OUTPUTSELECT
btn => output_LED_1.OUTPUTSELECT
btn => output_LED_1.OUTPUTSELECT
btn => output_LED_1.OUTPUTSELECT
btn => output_LED_1.OUTPUTSELECT
btn => output_LED_1.OUTPUTSELECT


